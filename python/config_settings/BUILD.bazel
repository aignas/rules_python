load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load(
    "//python/private:flags.bzl",
    "PrecompileAddToRunfilesFlag",
    "PrecompileFlag",
    "PrecompileSourceRetentionFlag",
    "PycCollectionFlag",
)
load(
    "//python/private:pip_flags.bzl",
    "UniversalWhlFlag",
    "UseWhlAbi3Flag",
    "UseWhlAbiCpFlag",
    "UseWhlFlag",
    "UseWhlPlatformFlag",
    "WhlLibcFlag",
)
load(":config_settings.bzl", "construct_config_settings")

filegroup(
    name = "distribution",
    srcs = glob(["*.bzl"]) + [
        "BUILD.bazel",
        "//python/config_settings/private:distribution",
    ],
    visibility = ["//python:__pkg__"],
)

construct_config_settings(
    name = "construct_config_settings",
)

string_flag(
    name = "precompile",
    build_setting_default = PrecompileFlag.AUTO,
    values = sorted(PrecompileFlag.__members__.values()),
    # NOTE: Only public because its an implicit dependency
    visibility = ["//visibility:public"],
)

string_flag(
    name = "precompile_source_retention",
    build_setting_default = PrecompileSourceRetentionFlag.KEEP_SOURCE,
    values = sorted(PrecompileSourceRetentionFlag.__members__.values()),
    # NOTE: Only public because its an implicit dependency
    visibility = ["//visibility:public"],
)

string_flag(
    name = "precompile_add_to_runfiles",
    build_setting_default = PrecompileAddToRunfilesFlag.ALWAYS,
    values = sorted(PrecompileAddToRunfilesFlag.__members__.values()),
    # NOTE: Only public because its an implicit dependency
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pyc_collection",
    build_setting_default = PycCollectionFlag.DISABLED,
    values = sorted(PycCollectionFlag.__members__.values()),
    # NOTE: Only public because its an implicit dependency
    visibility = ["//visibility:public"],
)

# pip.parse related flags

string_flag(
    name = "pip_whl",
    build_setting_default = UseWhlFlag.AUTO,
    values = sorted(UseWhlFlag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_abi3",
    build_setting_default = UseWhlAbi3Flag.AUTO,
    values = sorted(UseWhlAbi3Flag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_cpxy",
    build_setting_default = UseWhlAbiCpFlag.AUTO,
    values = sorted(UseWhlAbiCpFlag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_plat",
    build_setting_default = UseWhlPlatformFlag.AUTO,
    values = sorted(UseWhlPlatformFlag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_osx_arch",
    build_setting_default = UniversalWhlFlag.ARCH,
    values = sorted(UniversalWhlFlag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_linux_libc",
    build_setting_default = WhlLibcFlag.GLIBC,
    values = sorted(WhlLibcFlag.__members__.values()),
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_glibc_version",
    build_setting_default = "",
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_muslc_version",
    build_setting_default = "",
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)

string_flag(
    name = "pip_whl_osx_version",
    build_setting_default = "",
    # NOTE: Only public because it is used in pip hub repos.
    visibility = ["//visibility:public"],
)
